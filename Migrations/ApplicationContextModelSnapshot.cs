// <auto-generated />
using System;
using API_restauranteHamburguesas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api_restaurante_hamburguesas.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Estado", b =>
                {
                    b.Property<int>("IdComboCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstado")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComboCarrito"));

                    b.Property<string>("Etiqueta")
                        .HasColumnType("varchar(13)")
                        .HasColumnName("etiquetaEstado")
                        .HasColumnOrder(2);

                    b.HasKey("IdComboCarrito");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Etiqueta = "Habililtado"
                        },
                        new
                        {
                            Id = 2,
                            Etiqueta = "Deshabilitado"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.Orden", b =>
                {
                    b.Property<int>("IdComboCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idOrden")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComboCarrito"));

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idClienteOrden")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaOrden")
                        .HasColumnOrder(2);

                    b.HasKey("IdComboCarrito");

                    b.HasIndex("Id");

                    b.ToTable("Ordenes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Fecha = new DateTime(2023, 12, 9, 12, 33, 2, 27, DateTimeKind.Local).AddTicks(4048)
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Fecha = new DateTime(2023, 12, 9, 12, 33, 2, 27, DateTimeKind.Local).AddTicks(4083)
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.ProductoCarrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCarrito")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("cantidad")
                        .HasColumnOrder(3);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("idOrdenCarrito")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdOrden");

                    b.ToTable("Carrito");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductoCarrito");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Catalogos.GeneroCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idGenero")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Etiqueta")
                        .HasColumnType("varchar(9)")
                        .HasColumnName("etiquetaGenero")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            IdGenero = 1,
                            Etiqueta = "Masculino"
                        },
                        new
                        {
                            IdGenero = 2,
                            Etiqueta = "Femenino"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Catalogos.TipoUsuario", b =>
                {
                    b.Property<int>("IdComboCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipo")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComboCarrito"));

                    b.Property<string>("Etiqueta")
                        .HasColumnType("varchar(13)")
                        .HasColumnName("etiquetaTipo")
                        .HasColumnOrder(2);

                    b.HasKey("IdComboCarrito");

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Etiqueta = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Etiqueta = "Cliente"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("apellido")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("fechaNcliente")
                        .HasColumnOrder(4);

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idGeneroCliente")
                        .HasColumnOrder(5);

                    b.Property<string>("MailCliente")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mail")
                        .HasColumnOrder(7);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombreCliente")
                        .HasColumnOrder(2);

                    b.Property<string>("TelefonoCliente")
                        .IsRequired()
                        .HasColumnType("varchar(12)")
                        .HasColumnName("telefono")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Clientes", t =>
                        {
                            t.HasCheckConstraint("CK_Genero", "[idGeneroCliente] = 1 OR [idGeneroCliente] = 2");
                        });

                    b.HasData(
                        new
                        {
                            IdCliente = 1,
                            Apellido = "Jácome",
                            FechaNacimiento = new DateTime(2003, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdGenero = 1,
                            MailCliente = "chrisjMora@gmail.com",
                            Nombre = "Christian",
                            TelefonoCliente = "0992724743"
                        },
                        new
                        {
                            IdCliente = 2,
                            Apellido = "Jácome",
                            FechaNacimiento = new DateTime(2007, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdGenero = 1,
                            MailCliente = "xavierjMora@gmail.com",
                            Nombre = "Xavier",
                            TelefonoCliente = "0992755743"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaAcceso")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAcceso")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(6);

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idCliente")
                        .HasColumnOrder(9);

                    b.Property<int>("IdEstadoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idEstadoUsuario")
                        .HasColumnOrder(8);

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario")
                        .HasColumnOrder(2);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombreUsuario")
                        .HasColumnOrder(3);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password")
                        .HasColumnOrder(5);

                    b.Property<string>("SaltPassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("saltPassword")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("IdEstadoUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            FechaAcceso = new DateTime(2023, 12, 9, 12, 33, 1, 899, DateTimeKind.Local).AddTicks(9246),
                            FechaCreacion = new DateTime(2023, 12, 9, 12, 33, 1, 899, DateTimeKind.Local).AddTicks(9237),
                            IdEstadoUsuario = 1,
                            IdTipoUsuario = 1,
                            Nombre = "admin",
                            Password = "AQAAAAIAAYagAAAAEMn1pwTkHKvqC6cBNqe0fHffYIfGbNcP4PB0ahFgoFeQZxzXkMRnsONBvWvi8iuPSA==",
                            SaltPassword = "99C56A3A3DADD9A29072760459D9672582B8B010A3C4E793861AD86F370A7D4B521ED95A77A55E6C32D0FB5298D4CD33CB8FDEF5EE5FDE2D4CF4C67824754AF2"
                        },
                        new
                        {
                            IdUsuario = 2,
                            FechaAcceso = new DateTime(2023, 12, 9, 12, 33, 1, 899, DateTimeKind.Local).AddTicks(9252),
                            FechaCreacion = new DateTime(2023, 12, 9, 12, 33, 1, 899, DateTimeKind.Local).AddTicks(9252),
                            IdCliente = 1,
                            IdEstadoUsuario = 1,
                            IdTipoUsuario = 2,
                            Nombre = "chris2003",
                            Password = "AQAAAAIAAYagAAAAEGSERbHFzt/GljZkX14qPcCJv81+SOPGQ/PTDwWdUK61ZnssxDF95SAwtGiBynjvSg==",
                            SaltPassword = "A913AEE3E5D5E10AA9D3BC6A15AABCF03C26D42B2B86E56F1E5EBA5BA08D21461C5A290442E4EC2ACC70D577A3617332AE051D497186046CECCE51B6B5F9F3BF"
                        },
                        new
                        {
                            IdUsuario = 3,
                            FechaAcceso = new DateTime(2023, 12, 9, 12, 33, 1, 899, DateTimeKind.Local).AddTicks(9254),
                            FechaCreacion = new DateTime(2023, 12, 9, 12, 33, 1, 899, DateTimeKind.Local).AddTicks(9254),
                            IdCliente = 2,
                            IdEstadoUsuario = 1,
                            IdTipoUsuario = 2,
                            Nombre = "xavier2007",
                            Password = "AQAAAAIAAYagAAAAEIVOh+vrmrl7lXuqQ4MgE+eGwbznBHLi4MRxpslrKhjJTVlv2yvCnPSqrc2Vwad6dQ==",
                            SaltPassword = "E8D1A0131B01CC4B1B20CB44880BB927D8AFEBE1E1F3515049C374FDE966B277B7C85EDE2E83D6935D535388562D7952E82AE145769BCB807B80F2C9F8BA1FDF"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Catalogos.CategoriaCombo", b =>
                {
                    b.Property<int>("IdComboCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaCombo")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComboCarrito"));

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("etiquetaCategoriaCombo")
                        .HasColumnOrder(2);

                    b.HasKey("IdComboCarrito");

                    b.ToTable("CategoriasCombo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Etiqueta = "ComboCarrito Familiar"
                        },
                        new
                        {
                            Id = 2,
                            Etiqueta = "ComboCarrito Individual"
                        },
                        new
                        {
                            Id = 3,
                            Etiqueta = "ComboCarrito Infantil"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Catalogos.CategoriaComida", b =>
                {
                    b.Property<int>("IdComboCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaComida")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComboCarrito"));

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("etiquetaCategoriaComida")
                        .HasColumnOrder(2);

                    b.HasKey("IdComboCarrito");

                    b.ToTable("CategoriasComida");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Etiqueta = "Hamburguesa"
                        },
                        new
                        {
                            Id = 2,
                            Etiqueta = "Bebida"
                        },
                        new
                        {
                            Id = 3,
                            Etiqueta = "Complemento"
                        },
                        new
                        {
                            Id = 4,
                            Etiqueta = "Postre"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcionProducto")
                        .HasColumnOrder(3);

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(1,1)")
                        .HasColumnName("descuento");

                    b.Property<int?>("IdCategoriaCombo")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaCombo");

                    b.Property<int>("IdEstadoCombo")
                        .HasColumnType("int")
                        .HasColumnName("idEstadoCombo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombreProducto")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaCombo");

                    b.HasIndex("IdEstadoCombo");

                    b.ToTable("Combos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Descripcion = "El combo clásico incluye una hamburguesa con queso,\r\nacompañada por papas fritas y una bebida refrescante.",
                            Descuento = 0.3m,
                            IdCategoriaCombo = 2,
                            IdEstadoCombo = 1,
                            Nombre = "ComboCarrito Clásico"
                        },
                        new
                        {
                            ProductoId = 2,
                            Descripcion = "El Combo \"Para Todos\" ofrece hamburguesas individuales\r\nvariadas con nachos cubiertos de sabores intensos,\r\npapas fritas especiales y una jarra grande de bebidas refrescantes.\r\n¡Ideal para satisfacer los gustos de todos en el grupo!",
                            Descuento = 0.2m,
                            IdCategoriaCombo = 1,
                            IdEstadoCombo = 1,
                            Nombre = "ComboCarrito Para Todos"
                        },
                        new
                        {
                            ProductoId = 3,
                            Descripcion = "El Combo \"Mini Burguer\" ofrece una hamburguesa pequeña\r\ncon queso y vegetales, acompañada de papas fritas y\r\nuna bebida refrescante, perfecto para los más pequeños.",
                            Descuento = 0.1m,
                            IdCategoriaCombo = 3,
                            IdEstadoCombo = 1,
                            Nombre = "ComboCarrito Mini Burguer"
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Comida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcionProducto")
                        .HasColumnOrder(3);

                    b.Property<int?>("IdCategoriaComida")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaComida");

                    b.Property<int>("IdEstadoComida")
                        .HasColumnType("int")
                        .HasColumnName("idEstadoComida");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombreProducto")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(2,1)")
                        .HasColumnName("precio");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaComida");

                    b.HasIndex("IdEstadoComida");

                    b.ToTable("Comidas");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Descripcion = "Una hamburguesa con queso, lechuga, tomate, cebolla y salsa especial.",
                            IdCategoriaComida = 1,
                            IdEstadoComida = 1,
                            Nombre = "Hamburguesa Clásica",
                            Precio = 5.5m
                        },
                        new
                        {
                            ProductoId = 2,
                            Descripcion = "Doble carne con queso, tocino, lechuga, tomate y aderezos.",
                            IdCategoriaComida = 1,
                            IdEstadoComida = 1,
                            Nombre = "Hamburguesa Doble",
                            Precio = 7.5m
                        },
                        new
                        {
                            ProductoId = 3,
                            Descripcion = "Una hamburguesa más pequeña con queso y vegetales básicos.",
                            IdCategoriaComida = 1,
                            IdEstadoComida = 1,
                            Nombre = "Mini Hamburguesa Sencilla",
                            Precio = 3.5m
                        },
                        new
                        {
                            ProductoId = 4,
                            Descripcion = "Papas fritas grandes",
                            IdCategoriaComida = 3,
                            IdEstadoComida = 1,
                            Nombre = "Papas Fritas Grandes",
                            Precio = 2.5m
                        },
                        new
                        {
                            ProductoId = 5,
                            Descripcion = "Papas fritas pequeñas",
                            IdCategoriaComida = 3,
                            IdEstadoComida = 1,
                            Nombre = "Papas Fritas Pequeñas",
                            Precio = 1.5m
                        },
                        new
                        {
                            ProductoId = 6,
                            Descripcion = "Coca Cola personal de 500 ml",
                            IdCategoriaComida = 2,
                            IdEstadoComida = 1,
                            Nombre = "Coca Cola (500ml)",
                            Precio = 2.5m
                        },
                        new
                        {
                            ProductoId = 7,
                            Descripcion = "Helado de vainilla",
                            IdCategoriaComida = 4,
                            IdEstadoComida = 1,
                            Nombre = "Helado de Vainilla",
                            Precio = 1.5m
                        },
                        new
                        {
                            ProductoId = 8,
                            Descripcion = "Helado de chocalate",
                            IdCategoriaComida = 4,
                            IdEstadoComida = 1,
                            Nombre = "Helado de Chocolate",
                            Precio = 1.5m
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.ComidaCombo", b =>
                {
                    b.Property<int>("IdComboCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idComidaCombo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComboCarrito"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric(1,0)")
                        .HasColumnName("cantidadComidaCombo")
                        .HasColumnOrder(3);

                    b.Property<int>("IdComboCarrito")
                        .HasColumnType("int")
                        .HasColumnName("idCombo")
                        .HasColumnOrder(1);

                    b.Property<int>("IdComida")
                        .HasColumnType("int")
                        .HasColumnName("idComida")
                        .HasColumnOrder(2);

                    b.HasKey("IdComboCarrito");

                    b.HasIndex("IdComboCarrito");

                    b.HasIndex("IdComida");

                    b.ToTable("ComboComida");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 1m,
                            IdCombo = 1,
                            IdComida = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 1m,
                            IdCombo = 1,
                            IdComida = 4
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 3m,
                            IdCombo = 1,
                            IdComida = 5
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 1m,
                            IdCombo = 1,
                            IdComida = 6
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 1m,
                            IdCombo = 1,
                            IdComida = 7
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 1m,
                            IdCombo = 1,
                            IdComida = 8
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 3m,
                            IdCombo = 2,
                            IdComida = 2
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 3m,
                            IdCombo = 2,
                            IdComida = 4
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 6m,
                            IdCombo = 2,
                            IdComida = 5
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 3m,
                            IdCombo = 2,
                            IdComida = 6
                        },
                        new
                        {
                            Id = 11,
                            Cantidad = 2m,
                            IdCombo = 2,
                            IdComida = 7
                        },
                        new
                        {
                            Id = 12,
                            Cantidad = 2m,
                            IdCombo = 2,
                            IdComida = 8
                        },
                        new
                        {
                            Id = 13,
                            Cantidad = 1m,
                            IdCombo = 3,
                            IdComida = 3
                        },
                        new
                        {
                            Id = 14,
                            Cantidad = 1m,
                            IdCombo = 3,
                            IdComida = 5
                        },
                        new
                        {
                            Id = 15,
                            Cantidad = 1m,
                            IdCombo = 3,
                            IdComida = 6
                        },
                        new
                        {
                            Id = 16,
                            Cantidad = 1m,
                            IdCombo = 3,
                            IdComida = 7
                        },
                        new
                        {
                            Id = 17,
                            Cantidad = 1m,
                            IdCombo = 3,
                            IdComida = 8
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Imagen", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_imagen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagenId"));

                    b.Property<byte[]>("Datos")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("datos_imagen");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("titulo_imagen");

                    b.HasKey("ImagenId");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.ComboCarrito", b =>
                {
                    b.HasBaseType("api_restaurante_hamburguesas.Models.Orden.ProductoCarrito");

                    b.Property<int>("IdComboCarrito")
                        .HasColumnType("int")
                        .HasColumnName("idCombo");

                    b.HasIndex("IdComboCarrito");

                    b.HasDiscriminator().HasValue("ComboCarrito");

                    b.HasData(
                        new
                        {
                            IdCarrito = 1,
                            Cantidad = 3m,
                            IdOrden = 1,
                            IdCombo = 1
                        },
                        new
                        {
                            IdCarrito = 2,
                            Cantidad = 2m,
                            IdOrden = 1,
                            IdCombo = 1
                        },
                        new
                        {
                            IdCarrito = 3,
                            Cantidad = 1m,
                            IdOrden = 2,
                            IdCombo = 3
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.ComidaCarrito", b =>
                {
                    b.HasBaseType("api_restaurante_hamburguesas.Models.Orden.ProductoCarrito");

                    b.Property<int?>("IdComboCarrito")
                        .HasColumnType("int")
                        .HasColumnName("idComboCarrito");

                    b.Property<int>("IdComida")
                        .HasColumnType("int")
                        .HasColumnName("idComida");

                    b.HasIndex("IdComboCarrito");

                    b.HasIndex("IdComida");

                    b.HasDiscriminator().HasValue("ComidaCarrito");

                    b.HasData(
                        new
                        {
                            IdCarrito = 4,
                            Cantidad = 3m,
                            IdOrden = 1,
                            IdComboCarrito = 1,
                            IdComida = 2
                        },
                        new
                        {
                            IdCarrito = 5,
                            Cantidad = 5m,
                            IdOrden = 1,
                            IdComboCarrito = 1,
                            IdComida = 5
                        },
                        new
                        {
                            IdCarrito = 6,
                            Cantidad = 5m,
                            IdOrden = 1,
                            IdComboCarrito = 1,
                            IdComida = 6
                        },
                        new
                        {
                            IdCarrito = 7,
                            Cantidad = 2m,
                            IdOrden = 1,
                            IdComboCarrito = 1,
                            IdComida = 7
                        },
                        new
                        {
                            IdCarrito = 8,
                            Cantidad = 2m,
                            IdOrden = 1,
                            IdComboCarrito = 2,
                            IdComida = 1
                        },
                        new
                        {
                            IdCarrito = 9,
                            Cantidad = 3m,
                            IdOrden = 1,
                            IdComboCarrito = 2,
                            IdComida = 4
                        },
                        new
                        {
                            IdCarrito = 10,
                            Cantidad = 3m,
                            IdOrden = 1,
                            IdComboCarrito = 2,
                            IdComida = 6
                        },
                        new
                        {
                            IdCarrito = 11,
                            Cantidad = 1m,
                            IdOrden = 1,
                            IdComboCarrito = 2,
                            IdComida = 8
                        },
                        new
                        {
                            IdCarrito = 13,
                            Cantidad = 1m,
                            IdOrden = 2,
                            IdComboCarrito = 3,
                            IdComida = 3
                        },
                        new
                        {
                            IdCarrito = 14,
                            Cantidad = 3m,
                            IdOrden = 2,
                            IdComboCarrito = 3,
                            IdComida = 5
                        },
                        new
                        {
                            IdCarrito = 15,
                            Cantidad = 3m,
                            IdOrden = 2,
                            IdComboCarrito = 3,
                            IdComida = 6
                        },
                        new
                        {
                            IdCarrito = 16,
                            Cantidad = 3m,
                            IdOrden = 2,
                            IdComboCarrito = 3,
                            IdComida = 7
                        },
                        new
                        {
                            IdCarrito = 17,
                            Cantidad = 4m,
                            IdOrden = 2,
                            IdComida = 2
                        },
                        new
                        {
                            IdCarrito = 18,
                            Cantidad = 2m,
                            IdOrden = 2,
                            IdComida = 6
                        });
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.Orden", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Persona.Cliente", "Cliente")
                        .WithOne("Orden")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Orden.Orden", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.ProductoCarrito", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Orden.Orden", "Orden")
                        .WithOne("Carrito")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Orden.ProductoCarrito", "IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Cliente", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Persona.Catalogos.GeneroCliente", "Genero")
                        .WithOne("Cliente")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Persona.Cliente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Usuario", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Persona.Cliente", "Cliente")
                        .WithOne("Usuario")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Persona.Usuario", "Id");

                    b.HasOne("api_restaurante_hamburguesas.Models.Estado", "EstadoUsuario")
                        .WithOne("Usuario")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Persona.Usuario", "IdEstadoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_restaurante_hamburguesas.Models.Persona.Catalogos.TipoUsuario", "TipoUsuario")
                        .WithOne("Usuario")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Persona.Usuario", "IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoUsuario");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Combo", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Productos.Catalogos.CategoriaCombo", "CategoriaCombo")
                        .WithOne("Combo")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Productos.Combo", "IdCategoriaCombo")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("api_restaurante_hamburguesas.Models.Estado", "EstadoCombo")
                        .WithOne("Combo")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Productos.Combo", "IdEstadoCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaCombo");

                    b.Navigation("EstadoCombo");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Comida", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Productos.Catalogos.CategoriaComida", "CategoriaComida")
                        .WithOne("Comida")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Productos.Comida", "IdCategoriaComida")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("api_restaurante_hamburguesas.Models.Estado", "EstadoComida")
                        .WithOne("Comida")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Productos.Comida", "IdEstadoComida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaComida");

                    b.Navigation("EstadoComida");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.ComidaCombo", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Productos.Combo", "Combo")
                        .WithOne("ComboComida")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Productos.ComidaCombo", "IdComboCarrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_restaurante_hamburguesas.Models.Productos.Comida", "Comida")
                        .WithOne("ComboComida")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Productos.ComidaCombo", "IdComida")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Comida");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.ComboCarrito", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Productos.Combo", "Combo")
                        .WithOne("ComboCarrito")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Orden.ComboCarrito", "IdComboCarrito")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.ComidaCarrito", b =>
                {
                    b.HasOne("api_restaurante_hamburguesas.Models.Orden.ComboCarrito", "ComboCarrito")
                        .WithOne("ComidaCarrito")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Orden.ComidaCarrito", "IdComboCarrito")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("api_restaurante_hamburguesas.Models.Productos.Comida", "Comida")
                        .WithOne("ComidaCarrito")
                        .HasForeignKey("api_restaurante_hamburguesas.Models.Orden.ComidaCarrito", "IdComida")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ComboCarrito");

                    b.Navigation("Comida");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Estado", b =>
                {
                    b.Navigation("Combo");

                    b.Navigation("Comida");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.Orden", b =>
                {
                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Catalogos.GeneroCliente", b =>
                {
                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Catalogos.TipoUsuario", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Persona.Cliente", b =>
                {
                    b.Navigation("Orden");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Catalogos.CategoriaCombo", b =>
                {
                    b.Navigation("Combo");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Catalogos.CategoriaComida", b =>
                {
                    b.Navigation("Comida");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Combo", b =>
                {
                    b.Navigation("ComboCarrito");

                    b.Navigation("ComboComida");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Productos.Comida", b =>
                {
                    b.Navigation("ComboComida");

                    b.Navigation("ComidaCarrito");
                });

            modelBuilder.Entity("api_restaurante_hamburguesas.Models.Orden.ComboCarrito", b =>
                {
                    b.Navigation("ComidaCarrito");
                });
#pragma warning restore 612, 618
        }
    }
}
